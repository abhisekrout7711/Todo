"""Description of the migration

Revision ID: d751cd01cc33
Revises: 
Create Date: 2025-01-22 17:07:47.622635

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd751cd01cc33'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tags',
    sa.Column('tag_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('tag_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('tasks',
    sa.Column('task_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('Pending', 'In Progress', 'Completed', 'Overdue', name='task_status'), nullable=True),
    sa.Column('due_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('priority', sa.Enum('Low', 'Medium', 'High', name='task_priority'), nullable=True),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.tag_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.drop_table('salary_new')
    op.drop_table('salary')
    op.drop_table('employee_new')
    op.drop_table('employee')
    op.drop_table('department_new')
    op.drop_table('department')
    op.drop_table('sales')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sales',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('region', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('discount', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('salesperson', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='sales_pkey')
    )
    op.create_table('department',
    sa.Column('dep_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('dep_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('dep_id', name='department_pkey')
    )
    op.create_table('department_new',
    sa.Column('dept_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('dep_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('dept_id', name='department_new_pkey')
    )
    op.create_table('employee',
    sa.Column('emp_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('emp_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dep_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('salary', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('emp_id', name='employee_pkey')
    )
    op.create_table('employee_new',
    sa.Column('emp_id', sa.INTEGER(), server_default=sa.text("nextval('employee_new_emp_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('dep_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('emp_id', name='employee_new_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('salary',
    sa.Column('emp_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('salary', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('emp_id', name='salary_pkey')
    )
    op.create_table('salary_new',
    sa.Column('emp_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('salary', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['emp_id'], ['employee_new.emp_id'], name='salary_new_emp_id_fkey')
    )
    op.drop_table('tasks')
    op.drop_table('users')
    op.drop_table('tags')
    # ### end Alembic commands ###
